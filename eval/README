Copyright (c) 2011
  Swinburne University of Technology, Melbourne, Australia
  All rights reserved.
Copyright (c) 2013-2014
  University of Oslo, Norway
  All rights reserved.

David Hayes (davihay@ifi.uio.no or david.hayes@ieee.org)

Released under the GNU General Public License version 2.


Built on previous work by:
	Gang Wang (wanggang@research.nec.com.cn)
	Yong Xia   (xiayong@research.nec.com.cn)


TCP Evaluation Suite
====================
See doc directory.


Dependencies:
=============

The TCP Evaluation Suite is designed to run with NS version
2.35. There is a minor change to the the official 2.35 release, so it
is recommended that you use the version co-located in the repository
with the TCP evaluation suite.


Traffic trace files:
====================

The following trace files are required: r4s1.orig, r4s2.orig,
r4s3.orig, r5s1.orig, r5s2.orig, r5s3.orig, r6s1.orig, r6s2.orig,
r6s3.orig.

They are available from:
http://trac.tools.ietf.org/group/irtf/trac/wiki/ICCRG, and need to be
placed in the scenarios/Tmix_Traffic directory.


Usage Instructions:
===================

Running eval/eval_tcp.sh without parameters will provide usage
instructions. Note that the "findtarget" option is not for general
use, but was used to determine the Tmix scale parameters defined for
the different experiments.

Note that by default eval_tcp.sh will not create trace files, but only
output the summary results of the tests. If you wish to generate trace
files for you own analysis use the savetracefile=1 command line option.


TCP variants tested
===================

The test scripts will test every TCP variant that has a file in the
test directory
(eg. eval/scenarios/Basic_Dumbbell_Scenarios/access_link/tcpvariants.tcl). A
number of variants are included with the evaluation suite. If you do
not want to run these tests (they can take some time to run) you will
need to rename or remove these files.


Adding a TCP variant:
=====================

TCP variants can be added by editing the eval/tcl/tcp_schemes.tcl file,
following the examples already there.

In addition to this a file with necessary test parameters needs to be placed in
each of the test directories:
  eg   eval/scenarios/Basic_Dumbbell_Scenarios/access_link/NewReno.tcl

Since the defaults have already been defined in tcl_base_setup for that
experiment, often the only line needed in the file is:

	    set Test_TCP NewTCPvariant

where "NewTCPvariant" identifies the scheme you have placed in
eval/tcl/tcp_schemes.tcl.



Implemented Tests:
==================

- Basic Dumbbell Scenarios:
	access_link
	data_center
	dial_up
	geo_satellite
	trans_oceanic
	wireless_access

	Delay ThroughputTradeoff (under basic dumbbell in the ns2 implementation)

- Impact on Standard TCP

- Ramp Up Time

- Multiple Bottleneck:
	Three bottlenecks with four flows


